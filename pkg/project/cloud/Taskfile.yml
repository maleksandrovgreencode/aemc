# Task tool documentation:
# 1) Basics: https://taskfile.dev/usage
# 2) Naming conventions: https://taskfile.dev/styleguide

version: '3'

env:
  AEM_INSTANCE_PROCESSING_MODE: auto
  AEM_OUTPUT_VALUE: NONE

vars:
  APM_VERSION: 5.5.1

tasks:
  setup:
    desc: setup AEM instances and dispatcher
    cmds:
      - task: aem:setup
      - task: dispatcher:setup

  resetup:
    desc: destroy then setup again AEM instances and dispatcher
    cmds:
      - task: destroy
      - task: setup

  start:
    desc: start AEM instances and dispatcher
    aliases: [up]
    cmds:
      - task: aem:up
      - task: dispatcher:up

  stop:
    desc: stop AEM instances and dispatcher
    aliases: [down]
    cmds:
      - task: dispatcher:down
      - task: aem:down

  restart:
    desc: restart AEM instances and dispatcher
    cmds:
      - task: aem:down
      - task: aem:up
      - task: dispatcher:down
      - task: dispatcher:up

  destroy:
    desc: destroy AEM instances and dispatcher
    cmds:
      - task: stop
      - task: aem:destroy
      - task: dispatcher:destroy

  aem:setup:
    desc: start and provision AEM instances then build and deploy AEM application
    cmds:
      - task: aem:start
      - task: aem:provision
      - task: aem:deploy

  aem:start:
    desc: start AEM instances
    aliases: [aem:up]
    cmds:
      - sh aemw instance launch

  aem:status:
    desc: check status of AEM instances
    env:
      AEM_OUTPUT_VALUE: ALL
    cmds:
      - sh aemw instance status

  aem:provision:
    desc: provision AEM instances by installing packages and applying configurations
    aliases: [aem:configure]
    cmds:
      - task: aem:provision:repl-agent-publish
      - task: aem:provision:repl-agent-flush
      - task: aem:provision:crx
      - task: aem:provision:apm

  aem:provision:repl-agent-publish:
    desc: configure replication agent on AEM author instance
    internal: true
    cmds:
      - |
        PROPS="
        enabled: true
        transportUri: http://localhost:4503/bin/receive?sling:authRequestLogin=1
        transportUser: admin
        transportPassword: admin
        userId: admin
        "
        echo "$PROPS" | sh aemw repl agent setup -A --location "author" --name "publish"

  aem:provision:repl-agent-flush:
    desc: configure replication agent on AEM publish instance
    internal: true
    cmds:
      - |
        PROPS="
        enabled: true
        transportUri: http://127.0.0.1/dispatcher/invalidate.cache
        protocolHTTPHeaders:
          - CQ-Action: {action}
          - CQ-Handle: {path}
          - CQ-Path: {path}
          - Host: publish
          "
        echo "$PROPS" | sh aemw repl agent setup -P --location "publish" --name "flush"

  aem:provision:crx:
    desc: enable CRX/DE on all AEM instances
    internal: true
    cmds:
      - 'sh aemw osgi config save --pid "org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet" --input-string "alias: /crx/server"'

  aem:provision:apm:
    desc: deploy APM tool
    internal: true
    cmds:
      - sh aemw package deploy --url "https://github.com/wttech/APM/releases/download/apm-{{.APM_VERSION}}/apm-all-{{.APM_VERSION}}.zip"

  aem:destroy:
    desc: destroy AEM instances
    deps: [aem:stop]
    cmds: [sh aemw instance destroy]

  aem:stop:
    desc: stop AEM instances
    aliases: [aem:down]
    cmds: [sh aemw instance stop]

  aem:build:
    desc: build AEM application using Maven
    cmds:
      - >
        sh aemw app build
        --command "mvn clean package"
        --sources "pom.xml,all,core,ui.apps,ui.apps.structure,ui.config,ui.content,ui.frontend,ui.tests"
        --file "all/target/*.all-*.zip"

  aem:deploy:
    desc: deploy AEM application
    deps: [aem:build]
    cmds:
      - sh aemw package deploy --file "all/target/*.all-*.zip"

  dispatcher:setup:
    desc: setup AEM dispatcher
    cmds:
      - task: dispatcher:start
      - task: dispatcher:status

  dispatcher:resetup:
    desc: destroy then setup again AEM dispatcher
    cmds:
      - task: dispatcher:destroy
      - task: dispatcher:setup

  dispatcher:start:
    desc: start AEM dispatcher using SDK image
    aliases: [dispatcher:up]
    dir: dispatcher
    cmds:
      # - sh aem/home/opt/sdk/dispatcher/bin/validate.sh dispatcher/src > aem/home/var/log/dispatcher-validate.log # uncomment if possible, see: https://github.com/adobe/aem-project-archetype/issues/1043
      - rm -fr target/sdk && cp -r ../aem/home/opt/sdk/dispatcher target/sdk
      - docker tag "$(docker load --input "target/sdk/lib/dispatcher-publish-{{ARCH}}.tar.gz" | awk -v 'FS= ' '{print $3}')" "adobe/aem-ethos/dispatcher-publish:latest"
      - docker compose up -d

  dispatcher:stop:
    desc: stop AEM dispatcher
    aliases: [dispatcher:down]
    dir: dispatcher
    cmds: [docker compose down]

  dispatcher:restart:
    desc: restart AEM dispatcher
    cmds:
      - task: dispatcher:stop
      - task: dispatcher:start

  dispatcher:status:
    desc: check status of AEM dispatcher
    dir: dispatcher
    cmds:
      - docker compose ps
      - docker compose logs --tail 20

  dispatcher:destroy:
    desc: destroy AEM dispatcher
    dir: dispatcher
    cmds: [docker compose rm]
