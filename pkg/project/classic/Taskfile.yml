# Task tool documentation:
# 1) Basics: https://taskfile.dev/usage
# 2) Naming conventions: https://taskfile.dev/styleguide

version: '3'

env:
  AEM_INSTANCE_PROCESSING_MODE: auto
  AEM_OUTPUT_VALUE: NONE

vars:
  APM_VERSION: 5.5.1

tasks:
  setup:
    desc: sets up the environment with AEM and dispatcher
    cmds:
      - task: aem:setup
      - task: dispatcher:setup

  resetup:
    desc: destroys and sets up the environment again
    cmds:
      - task: destroy
      - task: setup

  start:
    desc: starts the environment with AEM and dispatcher
    aliases: [up]
    cmds:
      - task: aem:up
      - task: dispatcher:up

  stop:
    desc: stops the environment
    aliases: [down]
    cmds:
      - task: dispatcher:down
      - task: aem:down

  restart:
    desc: restarts environment including AEM and dispatcher
    cmds:
      - task: aem:down
      - task: aem:up
      - task: dispatcher:down
      - task: dispatcher:up

  destroy:
    desc: destroys the entire environment
    cmds:
      - task: stop
      - task: aem:destroy
      - task: dispatcher:destroy

  aem:setup:
    desc: sets up AEM instances by starting and provisioning them. It also deploys the code to them
    cmds:
      - task: aem:start
      - task: aem:provision
      - task: aem:deploy

  aem:start:
    desc: starts AEM instances
    aliases: [aem:up]
    cmds:
      - sh aemw instance launch

  aem:await:
    desc: awaits stable AEM instances
    internal: true
    aliases: [aem:check]
    cmds:
      - sh aemw instance await

  aem:status:
    desc: checks statuses of AEM instances
    env:
      AEM_OUTPUT_VALUE: ALL
    cmds:
      - sh aemw instance status

  aem:provision:
    desc: provisions AEM instances by installing necessary packages and setting configurations
    aliases: [aem:configure]
    cmds:
      - task: aem:provision:repl-agent-publish
      - task: aem:provision:repl-agent-flush
      - task: aem:provision:crx
      - task: aem:provision:apm
      - task: aem:provision:service-pack

  aem:provision:repl-agent-publish:
    desc: configures replication agent on AEM author instance
    internal: true
    cmds:
      - |
        PROPS="
        enabled: true
        transportUri: http://localhost:4503/bin/receive?sling:authRequestLogin=1
        transportUser: admin
        transportPassword: admin
        userId: admin
        "
        echo "$PROPS" | sh aemw repl agent setup -A --location "author" --name "publish"

  aem:provision:repl-agent-flush:
    desc: configures replication agent on AEM publish instance
    internal: true
    cmds:
      - |
        PROPS="
        enabled: true
        transportUri: http://127.0.0.1/dispatcher/invalidate.cache
        protocolHTTPHeaders:
          - CQ-Action: {action}
          - CQ-Handle: {path}
          - CQ-Path: {path}
          - Host: publish
          "
        echo "$PROPS" | sh aemw repl agent setup -P --location "publish" --name "flush"

  aem:provision:crx:
    desc: enables CRX/DE on all AEM instances
    internal: true
    cmds:
      - 'sh aemw osgi config save --pid "org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet" --input-string "alias: /crx/server"'

  aem:provision:apm:
    desc: deploys APM tool
    internal: true
    cmds:
      - sh aemw package deploy --url "https://github.com/wttech/APM/releases/download/apm-{{.APM_VERSION}}/apm-all-{{.APM_VERSION}}.zip"

  aem:provision:service-pack:
    desc: deploys AEM Service Pack
    internal: true
    cmds:
      - sh aemw package deploy --file "aem/home/lib/aem-service-pkg-6.5.*.0.zip"

  aem:destroy:
    desc: destroys all AEM instances
    deps: [aem:stop]
    cmds: [sh aemw instance destroy]

  aem:stop:
    desc: stops AEM instances
    aliases: [aem:down]
    cmds: [sh aemw instance stop]

  aem:build:
    desc: builds AEM application in current folder using Maven
    cmds:
      - >
        sh aemw app build
        --command "mvn clean package"
        --sources "pom.xml,all,core,ui.apps,ui.apps.structure,ui.config,ui.content,ui.frontend,ui.tests"
        --file "all/target/*.all-*.zip"

  aem:deploy:
    desc: deploys AEM application built with aem:build
    deps: [aem:build]
    cmds:
      - sh aemw package deploy --file "all/target/*.all-*.zip"

  dispatcher:setup:
    desc: setup Docker containers
    cmds:
      - task: docker:start
      - task: docker:status

  dispatcher:build:
    desc: builds dispatcher Docker image
    dir: dispatcher
    cmds:
      - docker build --platform linux/amd64 -t acme/aem-ams/dispatcher-publish .

  dispatcher:test:
    desc: test AEM dispatcher image
    dir: dispatcher
    cmds:
      - docker run --rm -it --entrypoint bash acme/aem-ams/dispatcher-publish:latest

  dispatcher:start:
    desc: starts Docker containers with dispatcher
    aliases: [dispatcher:up]
    deps: [dispatcher:build]
    cmds:
      - mkdir -p aem/home/var/dispatcher/httpd/logs aem/home/var/dispatcher/httpd/cache aem/home/var/dispatcher/httpd/htdocs
      - docker compose up -d

  dispatcher:stop:
    desc: stops Docker containers
    aliases: [dispatcher:down]
    cmds: [docker compose down]

  dispatcher:restart:
    desc: restarts Docker containers
    cmds:
      - task: docker-stop
      - task: docker-start

  dispatcher:status:
    desc: lists Docker containers
    cmds:
      - docker compose ps
      - docker compose logs

  dispatcher:destroy:
    desc: destroys dispatcher containers
    cmds: [docker compose rm]
